package geometry;
import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
        LinkedList<Geometry2D> geometry2DList = new LinkedList<>();
        LinkedList<Geometry3D> geometry3DList = new LinkedList<>();
        Scanner scanner = new Scanner(System.in);

        while (true) {
            System.out.println("Choose an action: [add2D, add3D, remove2D, remove3D, find2D, find3D, list, exit]");
            String action = scanner.nextLine().trim();

            switch (action.toLowerCase()) {
                case "add2d":
                    System.out.println("Enter 2D geometry type (circle, rectangle, triangle): ");
                    String type2D = scanner.nextLine();
                    Geometry2D geometry2D = create2DGeometry(type2D, scanner);
                    if (geometry2D != null) {
                        geometry2DList.add(geometry2D);
                        System.out.println("2D geometry added.");
                    }
                    break;

                case "add3d":
                    System.out.println("Enter 3D geometry type (rectangularprism, sphere, triangularprism): ");
                    String type3D = scanner.nextLine();
                    Geometry3D geometry3D = create3DGeometry(type3D, scanner);
                    if (geometry3D != null) {
                        geometry3DList.add(geometry3D);
                        System.out.println("3D geometry added.");
                    }
                    break;

                case "remove2d":
                    System.out.println("Enter 2D geometry type to remove (circle, rectangle, triangle): ");
                    String removeType2D = scanner.nextLine();
                    if (removeGeometry(geometry2DList, removeType2D, scanner)) {
                        System.out.println("2D geometry removed.");
                    } else {
                        System.out.println("Geometry not found.");
                    }
                    break;

                case "remove3d":
                    System.out.println("Enter 3D geometry type to remove (rectangularprism, sphere, triangularprism): ");
                    String removeType3D = scanner.nextLine();
                    if (removeGeometry(geometry3DList, removeType3D, scanner)) {
                        System.out.println("3D geometry removed.");
                    } else {
                        System.out.println("Geometry not found.");
                    }
                    break;

                case "find2d":
                    System.out.println("Enter 2D geometry type to find (circle, rectangle, triangle): ");
                    String findType2D = scanner.nextLine();
                    if (!findGeometry(geometry2DList, findType2D, scanner)) {
                        System.out.println("Geometry not found.");
                    }
                    break;

                case "find3d":
                    System.out.println("Enter 3D geometry type to find (rectangularprism, sphere, triangularprism): ");
                    String findType3D = scanner.nextLine();
                    if (!findGeometry(geometry3DList, findType3D, scanner)) {
                        System.out.println("Geometry not found.");
                    }
                    break;

                case "list":
                    System.out.println("2D Geometries:");
                    geometry2DList.printList();
                    System.out.println("3D Geometries:");
                    geometry3DList.printList();
                    break;

                case "exit":
                    System.out.println("Exiting...");
                    scanner.close();
                    return;

                default:
                    System.out.println("Invalid action. Please try again.");
            }
        }
    }

    private static Geometry2D create2DGeometry(String type, Scanner scanner) {
        // Implementation from previous examples
        // ...
    }

    private static Geometry3D create3DGeometry(String type, Scanner scanner) {
        // Implementation from previous examples
        // ...
    }

    private static <T> boolean removeGeometry(LinkedList<T> list, String type, Scanner scanner) {
        System.out.println("Enter identifying parameters for the geometry:");
        T target = createGeometryFromType(type, scanner); // Common utility method
        if (target != null) {
            return list.remove(target);
        }
        return false;
    }

    private static <T> boolean findGeometry(LinkedList<T> list, String type, Scanner scanner) {
        System.out.println("Enter identifying parameters for the geometry:");
        T target = createGeometryFromType(type, scanner); // Common utility method
        if (target != null && list.contains(target)) {
            System.out.println("Geometry found: " + target);
            return true;
        }
        return false;
    }

    private static <T> T createGeometryFromType(String type, Scanner scanner) {
        // Implement logic to create appropriate 2D or 3D geometry from user input
        // This can be reused for both `find` and `remove`
        // You can use `create2DGeometry` or `create3DGeometry` based on the type
    }
}
